I will only include important design patterns that we must go through 
in order to solve lld based problems. There are a tonnes of design patterns but we not
need to learn them all(except creational patterns).
Imporant creational pattern: 
1.1 Singleton design pattern. (creational)
1.2 Builder design pattern. (creational)
1.3 Factory and abstract factory design pattern.(creational)
1.4 Adaptor pattern (structural)
1.5 Decorator pattern (structural)
1.6 Observer design pattern. (behaviour pattern)
Other patterns to take care of:
2.1 Null object pattern (behaviour)
2.2 adapter pattern (structural)
2.3 iterative pattern (behaviour)
2.4 strategy pattern (observer)
2.5 chain of responsibility (behaviour pattern)
------------------------------------------------------
Two types of lld:
1. classical 
2. machine coding

1. Classical interviews: clearify the requirements
                         list down the classes 
                         implementation

---------------------------------------------------
topics to cover for machine codign round: 
1. splitwise
2. rate limiter
3. messaging queue
4. design a distributed cache.  